#include <bits/stdc++.h> 
class Node{
    public:
    int data;
    Node*next;

    Node(int val){
        this->data=val;
        this->next=NULL;
    }
};

Node*circularlist(int n){
    Node*head=new Node(1);
    Node*temp=head;
    int count=2;
    while(count<=n){
        Node* newNode= new Node(count);
        temp->next=newNode;
        temp=newNode;
        count++;
    }
    temp->next=head;
    return head;
}
Node* lastPerson(Node*head, int k,int n){
    int count=1;
    Node*curr=head;
    Node*prev=NULL;
   //base case
   if(n==1){
    return head;
   }
  while(count!=k){
      prev=curr;
      curr=curr->next;
      count++;
  }
  prev->next=curr->next;
  Node*temp=curr->next;
  delete curr;
   return lastPerson(temp,k,n-1);
}

int josephus(int n, int k)
{
    Node* head= circularlist(n);
    //Head=1 
    Node*temp=lastPerson(head,k,n);
    return temp->data;
}
