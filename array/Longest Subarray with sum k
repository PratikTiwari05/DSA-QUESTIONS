#include<bits/stdc++.h>
int longestSubarrayWithSumK(vector<int> a, long long k) {
    int n=a.size();
    vector<int>prefix(n,0);
    prefix[0]=a[0];
    for(int i=1;i<n;i++){
        prefix[i]=a[i]+prefix[i-1];
    }
    long long maxLen=0;
unordered_map<long long, int> freq;
    for(long long j=0;j<n;j++){
        if(prefix[j]==k){
            maxLen=max(maxLen,j+1);
        }
        long long remSum=prefix[j]-k;
        if(freq.find(remSum)!=freq.end()){
            maxLen=max(maxLen,j-freq[remSum]);
        }
       if(freq.find(prefix[j])==freq.end()){
        freq[prefix[j]]=j;
       }
    }
    return (int)maxLen;
}
