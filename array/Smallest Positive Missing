/*
 * Author: Pratik Tiwari
 * Date: April 27, 2025
 * Problem: Find the smallest positive number missing from the array.
 * Approach: 
 *  1. Sort the array.
 *  2. Initialize 'num' to 1.
 *  3. Iterate through the array:
 *      - If current element equals 'num', increment 'num'.
 *      - If current element > 'num', then 'num' is missing.
 *  4. Return 'num' at the end.
 * Time Complexity: O(n log n) due to sorting.
 * Space Complexity: O(1) extra space (in-place).
 */

#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    // Function to find the smallest positive number missing from the array
    int missingNumber(vector<int> &arr) {
        sort(arr.begin(), arr.end());
        int num = 1;  // Start checking from 1

        for (int i = 0; i < arr.size(); i++) {
            if (arr[i] == num) {
                num++;  // Found the current number, check for next
            } else if (arr[i] > num) {
                return num;  // Gap found, return the missing number
            }
        }
        return num;  // If no gap found, return next number after largest
    }
};
