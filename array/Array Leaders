// Added Solution for "Leaders in an Array" problem.
// Approach: Traverse from right to left, keep track of the maximum element, and collect all leaders.
// Time Complexity: O(N), Space Complexity: O(N)

class Solution {
    // Function to find the leaders in the array.
public:
    vector<int> leaders(vector<int>& arr) {
        // Code here
        int n = arr.size();
        vector<int> ans;
        int maxValue = arr[n-1];
        ans.push_back(maxValue); // last index is a leader by default
        for (int i = n-2; i >= 0; i--) {
            if (arr[i] >= maxValue) {
                maxValue = arr[i];
                ans.push_back(arr[i]);
            }
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
