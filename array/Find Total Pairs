#include <vector>
#include <map>
using namespace std;

//Brute force using 2 loops i and j and applying condition will also work but takes O(n^2) Complexity


/**
 * Function to count the number of valid pairs (i, j) such that:
 * arr[i] - i == arr[j] - j, where i != j.
 * 
 * This is achieved by transforming the problem into finding duplicate differences
 * between elements and their indices, and counting how many times each difference occurs.
 * 
 * @param arr: A vector of integers representing the array.
 * @return long long: The total number of valid pairs (i, j) that satisfy the condition arr[i] - i == arr[j] - j.
 */
long long countPairs(vector<int>& arr) {
    // Map to store the frequency of differences (arr[i] - i)
    map<long long, long long> freq;
    
    // Iterate through the array, and for each element, compute the difference arr[i] - i
    for (long long i = 0; i < arr.size(); i++) {
        freq[arr[i] - i]++;  // Increment the frequency of each difference
    }
    
    long long count = 0;
    
    // For each unique difference, calculate the number of pairs
    for (auto& entry : freq) {
        long long n = entry.second;  // Frequency of the current difference
        count += n * (n - 1);  // Add the number of valid pairs from the current frequency
    }
    
    return count;
}

