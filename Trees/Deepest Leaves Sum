#include <bits/stdc++.h> 
/************************************************************

    Following is the Tree node structure:
    
    template <typename T>
    class TreeNode 
    {
        public : 
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) 
        {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
int lenTree(TreeNode<int>*root){
    if(root==NULL){
        return 0;
    }
    int leftHeight=lenTree(root->left);
    int rightHeight=lenTree(root->right);
    return max(leftHeight,rightHeight)+1;
}
void traversal(TreeNode<int>* root,vector<int>&ans,int height,int level){
    if(root==NULL) return;
    if( level+1==height &&(root->left==NULL && root->right==NULL) ){
        ans.push_back(root->data);
    }
    traversal(root->left,ans,height,level+1);
    traversal(root->right,ans,height,level+1);

}
int deepestLeavesSum(TreeNode<int>* root)
{
    int height=lenTree(root);
   int sum=0;
   vector<int>ans;
   traversal(root,ans,height,0);
   for(int i=0;i<ans.size();i++){
       sum+=ans[i];
   }
   return sum;
}
